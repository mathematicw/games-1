Here's how to make the game in only 6 steps:

(1): Enter the following prompt:

"write p5.js code for Flappy Bird where you control a yellow bird continuously flying between a series of green pipes. The bird flaps every time you left click the mouse. If the bird falls to the ground or hits a pipe, you lose. This game goes on infinitely until you lose and you get points the further you go".

(2): Use generative AI or existing game assets and spirits. I searched "flappy bird assets" on Google and used the first link, a GitHub repo with pngs from the original Flappy Bird.

(3): Use this prompt to link assets to the code:

"Please generate the entire file again based on the fact I'm using a unique background, spirits for the bird, and pipes. Here is the list of assets I'm using: [list of file names]."

Code Interpreter should modify the code accordingly to include the list of file names.

(4) Make an account OpenProcessing -> create a sketch -> paste in the code generated by Code Interpreter -> upload in-game assets from step (2).

(5) (Optional) Ask ChatGPT to make changes to improve the in-game experience e.g., adding a high score, restarting the game when the bird dies, etc. Copy the new code into your OpenProcessing sketch and reload the game.

(6) If something doesn't work, ask GPT4 to fix it. Copy and paste the error message and ask it to regenerate the code.

---

Bonus Tips:

- Iteratively test code. Each time you make a change using Code Interpreter, test the updated code by playing the game so you catch new bugs early.

- Learn programming by asking questions: "Act as a senior programmer very good at explaining concepts to a beginner. Tell me how gravity works in this game and how you used code to make this happen."Code Interpreter/GPT4 for code generation. Download Pre-existing assets or generate new images for graphics.

Excited to see what you make!
